cmake_minimum_required(VERSION 3.8)
cmake_policy(SET CMP0048 NEW)
project(flow VERSION 1 LANGUAGES CXX)

#list(APPEND CMAKE_PREFIX_PATH "~/phd/analysis/flow/build/install/")
find_package(ROOT REQUIRED)
include(${ROOT_USE_FILE})
find_package(Qn 1 REQUIRED)



#option(ALICE_REDUCEDEVENT "Activate ALICE-ReducedEvent interface" Off)
#option(ALICE_AOD "Activate ALICE-AOD interface" Off)
list(APPEND AliceInterfaces ALICE_REDUCEDEVENT ALICE_AOD)
set(Interface " " CACHE STRING "Choose an Interface:")
list(FIND AliceInterfaces ${Interface} AliceOptFound)
if ("${Interface}" STREQUAL "ALICE_REDUCEDEVENT")
    set(ALICE_REDUCEDEVENT ON)
endif()
if ("${Interface}" STREQUAL "ALICE_AOD")
    set(ALICE_AOD ON)
endif()
if (AliceOptFound EQUAL -1)
    message("Interface not specified. Please choose one of the following:")
    message("${AliceInterfaces}")
endif()
if (AliceOptFound GREATER -1)
    configure_file("build_options.h.in" "common/build_options.h")
    # correction target
    add_executable(correct Correct/Correct.cpp Correct/CorrectionTask.cpp)
    target_compile_definitions(correct PUBLIC "-DUSE_ROOT")
    target_include_directories(correct PRIVATE ${ROOT_INCLUDE_DIRS})
    target_include_directories(correct PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
    target_include_directories(correct PRIVATE "${CMAKE_CURRENT_BINARY_DIR}/common")
    if (${ALICE_REDUCEDEVENT})
        message("Building with ALICE ReducedEvent Interface")
        add_subdirectory(Interface/ALICEReducedEvent)
        target_link_libraries(correct ALICEReducedEvent Qn::QnCorrections Qn::Base Qn::Correction ${ROOT_LIBRARIES})
    endif ()
    if (${ALICE_AOD})
        message("Building with ALICE AOD Interface")
        add_subdirectory(Interface/ALICEAOD)
        target_link_libraries(correct ALICEAOD Qn::QnCorrections Qn::Base Qn::Correction ${ROOT_LIBRARIES})
    endif ()
endif ()

# correlation target
add_executable(correlate Correlate/Correlate.cpp Correlate/CorrelationTask.cpp)
target_compile_features(correlate PUBLIC cxx_std_14)
target_compile_definitions(correlate PUBLIC "-DUSE_ROOT")
target_include_directories(correlate PRIVATE ${ROOT_INCLUDE_DIRS})
target_include_directories(correlate PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
target_link_libraries(correlate Qn::QnCorrections Qn::Base Qn::Correlation ${ROOT_LIBRARIES})
get_target_property(incs correlate INCLUDE_DIRECTORIES)
message(${incs})
